# Generated by Django 5.0.12 on 2025-03-23 07:05

import django.core.validators
import django.db.models.deletion
import eleganza.products.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when object was soft-deleted', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of creation', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of last update', verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(max_length=150, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='categories/', verbose_name='Featured Image')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='products.productcategory')),
            ],
            options={
                'verbose_name': 'Product Category',
                'verbose_name_plural': 'Product Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when object was soft-deleted', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of creation', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of last update', verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('sku', models.CharField(max_length=50, unique=True, verbose_name='SKU')),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Product Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('original_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Original Price')),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Selling Price')),
                ('stock_quantity', models.PositiveIntegerField(default=0, verbose_name='Stock Quantity')),
                ('reserved_stock', models.PositiveIntegerField(default=0, verbose_name='Reserved Stock')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured Product')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='products.productcategory')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when object was soft-deleted', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of creation', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of last update', verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=eleganza.products.models.product_image_upload_path, verbose_name='Image')),
                ('caption', models.CharField(blank=True, max_length=255, verbose_name='Caption')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Primary Image')),
                ('sort_order', models.PositiveIntegerField(default=0, verbose_name='Sort Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='products.product')),
            ],
            options={
                'ordering': ['-is_primary', 'sort_order'],
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('deleted_at', models.DateTimeField(blank=True, editable=False, help_text='Timestamp when object was soft-deleted', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp of creation', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp of last update', verbose_name='Updated At')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('title', models.CharField(max_length=255, verbose_name='Review Title')),
                ('comment', models.TextField(verbose_name='Review Comment')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='products.product')),
            ],
            options={
                'verbose_name': 'Product Review',
                'verbose_name_plural': 'Product Reviews',
                'ordering': ['-created_at'],
            },
        ),
    ]
